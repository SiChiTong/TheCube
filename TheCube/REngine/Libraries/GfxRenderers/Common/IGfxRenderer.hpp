#pragma once

////////////////////////////////////////////////////////////////////////////////
// REngine Base
////////////////////////////////////////////////////////////////////////////////
#include <REngine/Core/ReCoreBase>
////////////////////////////////////////////////////////////////////////////////
// REngine Library
////////////////////////////////////////////////////////////////////////////////
#include <REngine/Core/ReDynamicLibrary>
////////////////////////////////////////////////////////////////////////////////
// C++ Standard Library
////////////////////////////////////////////////////////////////////////////////
#include <memory>
#include <string>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Exported C functions
////////////////////////////////////////////////////////////////////////////////

// Must be defined by the specialized implementation
re_ExportFunction (void*, CreateGfxRenderer, (void) )
  re_ExportFunction (void, DestroyGfxRenderer, (void**) )

  // Defined in GfxRenderer_Base (all implementations need to link to it).
  re_ExportFunction (const char*, GetInterfaceName, (void) )
    re_ExportFunction (int, GetInterfaceVersion, (void) )

  ////////////////////////////////////////////////////////////////////////////////

  ////////////////////////////////////////////////////////////////////////////////
  NAMESPACE_BEGIN (REngine::GfxRenderers)
  ////////////////////////////////////////////////////////////////////////////////

  class IGfxRenderer {
public:
public:
  virtual void Render () = 0;

public:
  virtual auto GetName () -> std::string;
  virtual auto GetVersion () -> std::pair<int, int>;

protected:
  std::string name;
  std::pair<int, int> version;
};

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_END (REngine::GfxRenderers)
////////////////////////////////////////////////////////////////////////////////
