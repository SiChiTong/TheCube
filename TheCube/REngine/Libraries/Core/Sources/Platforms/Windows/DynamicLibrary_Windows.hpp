#pragma once

////////////////////////////////////////////////////////////////////////////////
// REngine Base
////////////////////////////////////////////////////////////////////////////////
#include <REngine/Core/ReCoreBase>
////////////////////////////////////////////////////////////////////////////////
// REngine Library
////////////////////////////////////////////////////////////////////////////////
#include "../../Utilities/String.hpp"
#include "../../Utilities/StringView.hpp"
////////////////////////////////////////////////////////////////////////////////
// System headers
////////////////////////////////////////////////////////////////////////////////
#include <Windows.h>
////////////////////////////////////////////////////////////////////////////////
// C++ Standard Library
////////////////////////////////////////////////////////////////////////////////
#include <functional>
#include <memory>
#include <string_view>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_BEGIN (REngine::Core::Platforms::Windows)
////////////////////////////////////////////////////////////////////////////////

class Library_Implementation_Win
{
 public:
  Library_Implementation_Win (const std::string_view& filename);
  ~Library_Implementation_Win ();

 public:
  auto GetFilename () noexcept -> const std::string_view;
  bool IsLoaded () noexcept;
  void Load () noexcept;
  auto Unload () noexcept -> bool;

  template <typename FuncType>
  auto ResolveSymbol (const std::string_view& symbol)
    -> std::function<FuncType>;

 private:
  HMODULE libraryHandle;
  std::unique_ptr<REngine::Core::String> filename;
};

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_END (REngine::Core::Platforms::Windows)
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_BEGIN (REngine::Core)
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Type declarations
////////////////////////////////////////////////////////////////////////////////

#if defined(_WINDOWS)
using Library_Implementation =
  REngine::Core::Platforms::Windows::Library_Implementation_Win;
#endif // defined (_WINDOWS)

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_END (REngine::Core)
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Inline methods
////////////////////////////////////////////////////////////////////////////////
#include "DynamicLibrary_Windows.inl"
////////////////////////////////////////////////////////////////////////////////
