#pragma once

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_BEGIN (REngine::Core)
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Inline methods
////////////////////////////////////////////////////////////////////////////////

inline bool
  Library_Implementation_Win::IsLoaded () noexcept
{
  return (nullptr != this->libraryHandle);
}

////////////////////////////////////////////////////////////////////////////////
// Methods templates
////////////////////////////////////////////////////////////////////////////////

template <typename FuncType>
inline std::function<FuncType>
  Library_Implementation_Win::ResolveSymbol (const std::string_view& symbol)
{
  if (nullptr != this->libraryHandle)
  {
    auto ptr = reinterpret_cast<FuncType*> (
      GetProcAddress (this->libraryHandle, symbol.data ()));
    return std::function<FuncType>{ ptr };
  }
  else
  {
    return std::function<FuncType>{ nullptr };
  }
}

////////////////////////////////////////////////////////////////////////////////
NAMESPACE_END (REngine::Core)
////////////////////////////////////////////////////////////////////////////////
